# read in data  -----------------------------------------------------------
file <- "106th_SOS_Shipment_Bend"
d1 <- readr::read_csv(paste0("data/",file,".csv"))
# read in bgbase with text fixes and use this as the input for classification
d2 <- readr::read_csv("data/bgbase/BG-Base Export (02-27-2022).csv")
#d1 <- d2[d2$ACC_NUM %in% d1a$ACC_NUM, ]
# master table  --------------------------------------------------------
masterTable  <- masterTable(d1)
# master table  --------------------------------------------------------
masterTable  <- masterTable(d1)
View(masterTable)
# load packages -----------------------------------------------------------
pacman::p_load(dplyr, readr,stringr, lubridate, tidyr)
# source functions --------------------------------------------------------
lapply(list.files("src", full.names = TRUE), source)
# read in data  -----------------------------------------------------------
file <- "106th_SOS_Shipment_Bend"
d1 <- readr::read_csv(paste0("data/",file,".csv"))
# read in bgbase with text fixes and use this as the input for classification
d2 <- readr::read_csv("data/bgbase/BG-Base Export (02-27-2022).csv")
View(d2)
# read in data  -----------------------------------------------------------
file <- "106th_SOS_Shipment_Bend"
d1 <- readr::read_csv(paste0("data/",file,".csv"))
# read in bgbase with text fixes and use this as the input for classification
d2 <- readr::read_csv("data/bgbase/BG-Base Export (02-27-2022).csv")
d1 <- d2[d2$ACC_NUM %in% d1a$ACC_NUM, ]
d1a <- readr::read_csv(paste0("data/",file,".csv"))
# read in bgbase with text fixes and use this as the input for classification
d2 <- readr::read_csv("data/bgbase/BG-Base Export (02-27-2022).csv")
d1 <- d2[d2$ACC_NUM %in% d1a$ACC_NUM, ]
# master table  --------------------------------------------------------
masterTable  <- masterTable(d1)
# classify aspect ---------------------------------------------------------
masterTable <- aspectClassification(masterTable)
# classify ecoregion  -----------------------------------------------------
masterTable <- ecoregionClassification(masterTable)
#  classify slope ---------------------------------------------------------
masterTable$SLOPE <- slopeClassification(masterTable)
# classify soil -----------------------------------------------------------
masterTable <- soilClassification(masterTable)
# classify land owner -----------------------------------------------------
masterTable <- landOwnerClassification(masterTable)
# eval results ------------------------------------------------------------
write_csv(masterTable, file = paste0("output/",file, "_classified_"
,Sys.Date(),".csv"))
# load packages -----------------------------------------------------------
pacman::p_load(dplyr, readr,stringr, lubridate, tidyr)
# source functions --------------------------------------------------------
lapply(list.files("src", full.names = TRUE), source)
View(aspectClassification)
# read in data  -----------------------------------------------------------
file <- "106th_SOS_Shipment_Bend"
d1a <- readr::read_csv(paste0("data/",file,".csv"))
View(d1a)
# read in bgbase with text fixes and use this as the input for classification
d2 <- readr::read_csv("data/bgbase/BG-Base Export (02-27-2022).csv")
d1 <- d2[d2$ACC_NUM %in% d1a$ACC_NUM, ]
# read in data  -----------------------------------------------------------
file <- "89th_SOS_Shipment_MARSB_LT"
d1a <- readr::read_csv(paste0("data/",file,".csv"))
data <- d1a
# construct df ------------------------------------------------------------
## column names
c1 <- c(
"Curator Unique Number",
"Accession Prefix (NPGS)",
"Accession Number -Assigned",
"Inventory Prefix",
"Inventory Number",
"Inventory Suffix",
"Inventory Type - Lookup Picker",
"Taxon -Lookup Picker in GRIN",
"Received Date -received by site",
"Life Form -Lookup Picker",
"Level of Improvement -Lookup Picker",
"Reproductive Uniformity -Lookup Picker",
"Note (Accession Narrative)",
"Date Collected or Developed",
"Geography (Collection) -Lookup Picker in GRIN",
"Geography (Donor)  -Lookup Picker in GRIN",
"Number Plants Sampled",
"Collecting or Acquisition Source - List",
"Environment Description",
"Associated Species",
"Collector Verbatim Locality",
"Elevation (meters)",
"Latitude -decimal degrees",
"Longitude -decimal degrees",
"Georeference Datum",
"Georeference Protocol - Lookup Picker",
"Note (Accession Source - Collector)",
"Cooperator (Donor) 1 -full record",
"Cooperator (Donor) 2 -full record",
"Cooperator (Collector) 1 -full record",
"Cooperator (Collector) 2 -full record",
"Cooperator (Collector) 3 -full record",
"Land Owner",
"Land Owner Original Value",
"Land Owner Evaluation Required",
"SLOPE",
"SLOPE Original Value",
"ASPECT -lookup picker",
"ASPECT Original Value",
"SOIL TEXTURE - lookup picker",
"Soil TEXTURE Original Value",
"ECOREGION - Lookup picker",
"Ecoregion Original Value",
"Inventory Maintenance Policy",
"Inventory Maintenance Site -W6",
"Quantity On Hand",
"Quantity On Hand Units -'count' or 'packet'",
"Total Weight -gram (if unknown, leave blank)",
"Hundred Seed Weight -gram",
"Seed Count Verification (VALUE CLOSE TO ZERO) -Calcuated column",
"Parent Inventory",
"GERMS from DONOR (viability)",
"GERMS from DONOR (test date)",
"Note (Inventory)",
"Accession Name (Identifier 1)",
"Accession Name Category (Identifier 1) -Lookup Picker",
"Accession Name Cooperator (Identifier 1) -name, organization",
"Accession Name (Identifier 2)",
"Accession Name Category (Identifier 2) -Lookup Picker",
"Accession Name Cooperator (Identifier 2) -name, organization",
"Accession Name (Identifier 3)",
"Accession Name Category (Identifier 3) -Lookup Picker",
"Accession Name Cooperator (Identifier 3) -name, organization",
"Collector Voucher Number",
"Voucher Date",
"Voucher Location (1)",
"Voucher Location (2)",
"Voucher Location (3)",
"Voucher Collector -name, organization",
"Note (Voucher)"
)
df <- data.frame(matrix(nrow = nrow(data), ncol = length(c1)))
colnames(df) <- c1
View(df)
# create column assignments  ----------------------------------------------
## Accession Prefix (NPGS)
df$`Accession Prefix (NPGS)` <- "W6"
## "Inventory Prefix"
df$`Inventory Prefix` <- "W6"
## "Inventory Type - Lookup Picker"
df$`Inventory Type - Lookup Picker` <- "SD"
## "Taxon -Lookup Picker in GRIN"
df$`Taxon -Lookup Picker in GRIN` <- setTaxon(data)
# read in data  -----------------------------------------------------------
file <- "105th_SOS_Shipment"
d1a <- readr::read_csv(paste0("data/",file,".csv"))
# read in data  -----------------------------------------------------------
file <- "106th_SOS_Shipment_Bend"
d1a <- readr::read_csv(paste0("data/",file,".csv"))
# read in bgbase with text fixes and use this as the input for classification
d2 <- readr::read_csv("data/bgbase/BG-Base Export (02-27-2022).csv")
d1 <- d2[d2$ACC_NUM %in% d1a$ACC_NUM, ]
data <- d1
## "Taxon -Lookup Picker in GRIN"
df$`Taxon -Lookup Picker in GRIN` <- setTaxon(data)
# construct df ------------------------------------------------------------
## column names
c1 <- c(
"Curator Unique Number",
"Accession Prefix (NPGS)",
"Accession Number -Assigned",
"Inventory Prefix",
"Inventory Number",
"Inventory Suffix",
"Inventory Type - Lookup Picker",
"Taxon -Lookup Picker in GRIN",
"Received Date -received by site",
"Life Form -Lookup Picker",
"Level of Improvement -Lookup Picker",
"Reproductive Uniformity -Lookup Picker",
"Note (Accession Narrative)",
"Date Collected or Developed",
"Geography (Collection) -Lookup Picker in GRIN",
"Geography (Donor)  -Lookup Picker in GRIN",
"Number Plants Sampled",
"Collecting or Acquisition Source - List",
"Environment Description",
"Associated Species",
"Collector Verbatim Locality",
"Elevation (meters)",
"Latitude -decimal degrees",
"Longitude -decimal degrees",
"Georeference Datum",
"Georeference Protocol - Lookup Picker",
"Note (Accession Source - Collector)",
"Cooperator (Donor) 1 -full record",
"Cooperator (Donor) 2 -full record",
"Cooperator (Collector) 1 -full record",
"Cooperator (Collector) 2 -full record",
"Cooperator (Collector) 3 -full record",
"Land Owner",
"Land Owner Original Value",
"Land Owner Evaluation Required",
"SLOPE",
"SLOPE Original Value",
"ASPECT -lookup picker",
"ASPECT Original Value",
"SOIL TEXTURE - lookup picker",
"Soil TEXTURE Original Value",
"ECOREGION - Lookup picker",
"Ecoregion Original Value",
"Inventory Maintenance Policy",
"Inventory Maintenance Site -W6",
"Quantity On Hand",
"Quantity On Hand Units -'count' or 'packet'",
"Total Weight -gram (if unknown, leave blank)",
"Hundred Seed Weight -gram",
"Seed Count Verification (VALUE CLOSE TO ZERO) -Calcuated column",
"Parent Inventory",
"GERMS from DONOR (viability)",
"GERMS from DONOR (test date)",
"Note (Inventory)",
"Accession Name (Identifier 1)",
"Accession Name Category (Identifier 1) -Lookup Picker",
"Accession Name Cooperator (Identifier 1) -name, organization",
"Accession Name (Identifier 2)",
"Accession Name Category (Identifier 2) -Lookup Picker",
"Accession Name Cooperator (Identifier 2) -name, organization",
"Accession Name (Identifier 3)",
"Accession Name Category (Identifier 3) -Lookup Picker",
"Accession Name Cooperator (Identifier 3) -name, organization",
"Collector Voucher Number",
"Voucher Date",
"Voucher Location (1)",
"Voucher Location (2)",
"Voucher Location (3)",
"Voucher Collector -name, organization",
"Note (Voucher)"
)
df <- data.frame(matrix(nrow = nrow(data), ncol = length(c1)))
colnames(df) <- c1
# create column assignments  ----------------------------------------------
## Accession Prefix (NPGS)
df$`Accession Prefix (NPGS)` <- "W6"
## "Inventory Prefix"
df$`Inventory Prefix` <- "W6"
## "Inventory Type - Lookup Picker"
df$`Inventory Type - Lookup Picker` <- "SD"
## "Taxon -Lookup Picker in GRIN"
df$`Taxon -Lookup Picker in GRIN` <- setTaxon(data)
## "Taxon -Lookup Picker in GRIN"
df$`Taxon -Lookup Picker in GRIN` <- setTaxon(data)
## "Level of Improvement -Lookup Picker"
df$`Level of Improvement -Lookup Picker` <- "Wild material"
df$`Geography (Collection) -Lookup Picker in GRIN` <- geographyClassification(data)
View(df)
# master table  --------------------------------------------------------
masterTable  <- masterTable(d1)
# read in data  -----------------------------------------------------------
file <- "106th_SOS_Shipment_Bend"
d1a <- readr::read_csv(paste0("data/",file,".csv"))
# read in bgbase with text fixes and use this as the input for classification
d2 <- readr::read_csv("data/bgbase/BG-Base Export (02-27-2022).csv")
d1 <- d2[d2$ACC_NUM %in% d1a$ACC_NUM, ]
# master table  --------------------------------------------------------
masterTable  <- masterTable(d1)
# read in data  -----------------------------------------------------------
file <- "106th_SOS_Shipment_Bend"
d1 <- readr::read_csv(paste0("data/",file,".csv"))
# master table  --------------------------------------------------------
masterTable  <- masterTable(d1)
# work on classification for the shipment features
# carverd@colostate.edu
# 20211202
# load packages -----------------------------------------------------------
pacman::p_load(dplyr, readr, stringr, lubridate, tidyr)
# source functions --------------------------------------------------------
lapply(list.files("src", full.names = TRUE), source)
###
# current errors : 89th_SOS_Shipment_MARSB_LT, 91st_SOS_Shipment_NCBG, 99th_SOS_Shipment_NEWFS
# classified : 78th, 88th,98th,105th,106th
###
# read in data  -----------------------------------------------------------
file <- "106th_SOS_Shipment_Bend"
d1 <- readr::read_csv(paste0("data/",file,".csv"))
# read in bgbase with text fixes and use this as the input for classification
# d2 <- readr::read_csv("data/bgbase/BG-Base Export (02-27-2022).csv")
# d1 <- d2[d2$ACC_NUM %in% d1a$ACC_NUM, ]
# master table  --------------------------------------------------------
masterTable  <- masterTable(d1)
# work on classification for the shipment features
# carverd@colostate.edu
# 20211202
# load packages -----------------------------------------------------------
pacman::p_load(dplyr, readr, stringr, lubridate, tidyr)
# source functions --------------------------------------------------------
lapply(list.files("src", full.names = TRUE), source)
###
# current errors : 89th_SOS_Shipment_MARSB_LT, 91st_SOS_Shipment_NCBG, 99th_SOS_Shipment_NEWFS
# classified : 78th, 88th,98th,105th,106th
###
# read in data  -----------------------------------------------------------
file <- "106th_SOS_Shipment_Bend"
d1 <- readr::read_csv(paste0("data/",file,".csv"))
# read in bgbase with text fixes and use this as the input for classification
# d2 <- readr::read_csv("data/bgbase/BG-Base Export (02-27-2022).csv")
# d1 <- d2[d2$ACC_NUM %in% d1a$ACC_NUM, ]
# master table  --------------------------------------------------------
masterTable  <- masterTable(d1)
source("F:/usda/grin/sosShipmentClassificaiton/0_processData.R")
# read in data  -----------------------------------------------------------
file <- "111 or 112th_SOS_Shipment"
d1 <- readr::read_csv(paste0("data/",file,".csv"))
# work on classification for the shipment features
# carverd@colostate.edu
# 20211202
# load packages -----------------------------------------------------------
pacman::p_load(dplyr, readr, stringr, lubridate, tidyr)
# source functions --------------------------------------------------------
lapply(list.files("src", full.names = TRUE), source)
###
# current errors : 89th_SOS_Shipment_MARSB_LT, 91st_SOS_Shipment_NCBG, 99th_SOS_Shipment_NEWFS
# classified : 78th, 88th,98th,105th,106th
###
# read in data  -----------------------------------------------------------
file <- "111 or 112th_SOS_Shipment"
d1 <- readr::read_csv(paste0("data/",file,".csv"))
# read in bgbase with text fixes and use this as the input for classification
# d2 <- readr::read_csv("data/bgbase/BG-Base Export (02-27-2022).csv")
# d1 <- d2[d2$ACC_NUM %in% d1a$ACC_NUM, ]
View(d1)
# master table  --------------------------------------------------------
masterTable  <- masterTable(d1)
# classify aspect ---------------------------------------------------------
masterTable <- aspectClassification(masterTable)
# classify ecoregion  -----------------------------------------------------
masterTable <- ecoregionClassification(masterTable)
#  classify slope ---------------------------------------------------------
masterTable$SLOPE <- slopeClassification(masterTable)
# classify soil -----------------------------------------------------------
masterTable <- soilClassification(masterTable)
# classify land owner -----------------------------------------------------
masterTable <- landOwnerClassification(masterTable)
View(masterTable)
# eval results ------------------------------------------------------------
write_csv(masterTable, file = paste0("output/",file, "_classified_"
,Sys.Date(),".csv"))
# source functions --------------------------------------------------------
lapply(list.files("src", full.names = TRUE), source)
# read in data  -----------------------------------------------------------
file <- "data/111 or 112th_SOS_Shipment.csv"
d1 <- readr::read_csv(paste0("data/",file,".csv"))
# read in data  -----------------------------------------------------------
file <- "111 or 112th_SOS_Shipment.csv"
d1 <- readr::read_csv(paste0("data/",file,".csv"))
# read in data  -----------------------------------------------------------
file <- "111 or 112th_SOS_Shipment"
d1 <- readr::read_csv(paste0("data/",file,".csv"))
View(d1)
# master table  --------------------------------------------------------
masterTable  <- masterTable(d1)
# work on classification for the shipment features
# carverd@colostate.edu
# 20211202
# load packages -----------------------------------------------------------
pacman::p_load(dplyr, readr, stringr, lubridate, tidyr)
# source functions --------------------------------------------------------
lapply(list.files("src", full.names = TRUE), source)
###
# current errors : 89th_SOS_Shipment_MARSB_LT, 91st_SOS_Shipment_NCBG, 99th_SOS_Shipment_NEWFS
# classified : 78th, 88th,98th,105th,106th
###
# read in data  -----------------------------------------------------------
file <- "111 or 112th_SOS_Shipment"
d1 <- readr::read_csv(paste0("data/",file,".csv"))%>%
dplyr::filter(!is.na(ACC_NUM))
# # read in bgbase with text fixes and use this as the input for classification
d2 <- readr::read_csv("data/bgbase/BG-Base Export (02-27-2022).csv")
View(d2)
# d21 <- d2[d2$ACC_NUM %in% d1a$ACC_NUM, ]
#
#
# master table  --------------------------------------------------------
masterTable  <- masterTable(d1)
# classify aspect ---------------------------------------------------------
masterTable <- aspectClassification(masterTable)
# classify ecoregion  -----------------------------------------------------
masterTable <- ecoregionClassification(masterTable)
#  classify slope ---------------------------------------------------------
masterTable$SLOPE <- slopeClassification(masterTable)
# classify soil -----------------------------------------------------------
masterTable <- soilClassification(masterTable)
# classify land owner -----------------------------------------------------
masterTable <- landOwnerClassification(masterTable)
View(masterTable)
# eval results ------------------------------------------------------------
write_csv(masterTable, file = paste0("output/",file, "_classified_"
,Sys.Date(),".csv"))
pacman::p_load("dplyr", "readr", "stringr")
#
f1 <- readr::read_tsv(file = "data/bgbase/rawBGBASEExport202208.TXT")
f1
View(f1)
source("~/.active-rstudio-document", echo=TRUE)
col_types = cols(.default = col_character())
f1 <- readr::read_tsv(file = "data/bgbase/rawBGBASEExport202208.TXT",
f1 <- readr::read_tsv(file = "data/bgbase/rawBGBASEExport202208.TXT",
col_types = cols(.default = col_character()))
f1 <- readr::read_tsv(file = "data/bgbase/rawBGBASEExport202208.TXT",
col_types = cols(.default = col_character()))
spec(f1)
View(f1)
f2 <- f1 %>%
mutate(
COLL_DT = parse_date(COLL_DT, format = "%d/%b/%Y"))
f2
f2 <- f1 %>%
mutate(
COLL_DT = as.Date(COLL_DT, format = "%d/%b/%Y"))
head(f2)
f1 <- readr::read_tsv(file = "data/bgbase/rawBGBASEExport202208.TXT",
col_types = cols(.default = col_character()))
f2 <- f1 %>%
mutate(
COLL_DT = as.Date(COLL_DT, format = "%d/%b/%Y"))
f2
pacman::p_load("dplyr", "readr", "stringr", "lubridate")
f2 <- f1 %>%
mutate(
COLL_DT = lubridate::dmy(COLL_DT)
)
f2
f2$LATITUDE[1]
f2 <- f1 %>%
mutate(
COLL_DT = lubridate::dmy(COLL_DT),
LATITUDE_DECIMAL = col_number(LATITUDE_DECIMAL),
LONGITUDE_DECIMAL = col_number(LONGITUDE_DECIMAL)
)
f2 <- f1 %>%
mutate(
COLL_DT = lubridate::dmy(COLL_DT),
LATITUDE_DECIMAL = as.numeric(LATITUDE_DECIMAL),
LONGITUDE_DECIMAL = as.numeric(LONGITUDE_DECIMAL)
)
f2 <- f1 %>%
mutate(
COLL_DT = lubridate::dmy(COLL_DT),
ALTITUDE = parse_number(ALTITUDE)
)
View(f2)
f2 <- f1 %>%
mutate(
COLL_DT = lubridate::dmy(COLL_DT),
ALTITUDE = parse_number(ALTITUDE),
ACC_DT = lubridate::dmy(ACC_DT)
)
View(f2)
# export csv and excel doc
write_csv(x = f2, file = "data/bgbase/format_bgbase202208.csv")
write_excel_csv(x = f2, file = "data/bgbase/excel_format_bgbase202208.csv")
# load packages -----------------------------------------------------------
pacman::p_load(dplyr, readr, stringr, lubridate, tidyr, readxl)
# read in data  -----------------------------------------------------------
file <- "111 or 112th_SOS_Shipment"
d1 <- readxl::read_excel(paste0("data/",file,".xlsx"))%>%
dplyr::filter(!is.na(ACC_NUM))
View(d1)
install.packages("lifecycle")
install.packages("lifecycle")
# read in data  -----------------------------------------------------------
file <- "Mystery2_bg"
d1 <- readxl::read_excel(paste0("data/",file,".xlsx"))%>%
dplyr::filter(!is.na(ACC_NUM))
# load packages -----------------------------------------------------------
pacman::p_load(dplyr, readr, stringr, lubridate, tidyr, readxl)
# load packages -----------------------------------------------------------
pacman::p_load(dplyr, readr, stringr, lubridate, tidyr, readxl)
# source functions --------------------------------------------------------
lapply(list.files("src", full.names = TRUE), source)
# read in data  -----------------------------------------------------------
file <- "Mystery2_bg"
d1 <- readxl::read_excel(paste0("data/",file,".xlsx"))%>%
dplyr::filter(!is.na(ACC_NUM))
View(d1)
# # read in bgbase with text fixes and use this as the input for classification
d2 <- readxl::read_excel("data/bgbase/bgBase_formated202209.xlsx")
d21 <- d2[d2$ACC_NUM %in% d1$ACC_NUM, ]
View(d21)
dim(d1)
dim(d21)
# master table  --------------------------------------------------------
masterTable  <- masterTable(d21)
# classify aspect ---------------------------------------------------------
masterTable <- aspectClassification(masterTable)
# classify ecoregion  -----------------------------------------------------
masterTable <- ecoregionClassification(masterTable)
#  classify slope ---------------------------------------------------------
masterTable$SLOPE <- slopeClassification(masterTable)
# classify soil -----------------------------------------------------------
masterTable <- soilClassification(masterTable)
# classify land owner -----------------------------------------------------
masterTable <- landOwnerClassification(masterTable)
View(masterTable)
# load packages -----------------------------------------------------------
pacman::p_load(dplyr, readr, stringr, lubridate, tidyr, readxl, xlsx)
# eval results ------------------------------------------------------------
# write to xlsx
write.xlsx(masterTable,file = paste0("output/",file, "_classified_"
,Sys.Date(),".xlsx"))
install.packages(xlsx)
install.packages("xlsx")
LIBRARY(XLXSX)
library(xlsx)
# write to csv
write_csv(masterTable, file = paste0("output/",file, "_classified_"
,Sys.Date(),".csv"))
